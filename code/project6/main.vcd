$date
	Thu May 26 22:07:25 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module m_top $end
$var wire 32 ! w_led [31:0] $end
$var reg 1 " r_clk $end
$scope module p $end
$var wire 1 " w_clk $end
$var wire 1 # w_insn_add $end
$var wire 1 $ w_insn_sllv $end
$var wire 1 % w_insn_srlv $end
$var wire 1 & w_taken $end
$var wire 1 ' w_we $end
$var wire 32 ( w_tpc [31:0] $end
$var wire 5 ) w_rt [4:0] $end
$var wire 32 * w_rslt2 [31:0] $end
$var wire 32 + w_rslt [31:0] $end
$var wire 5 , w_rs [4:0] $end
$var wire 32 - w_rrt2 [31:0] $end
$var wire 32 . w_rrt [31:0] $end
$var wire 32 / w_rrs [31:0] $end
$var wire 5 0 w_rd2 [4:0] $end
$var wire 5 1 w_rd [4:0] $end
$var wire 32 2 w_pc4 [31:0] $end
$var wire 6 3 w_op [5:0] $end
$var wire 32 4 w_ldd [31:0] $end
$var wire 32 5 w_ir [31:0] $end
$var wire 1 6 w_insn_sw $end
$var wire 1 7 w_insn_lw $end
$var wire 1 8 w_insn_bne $end
$var wire 1 9 w_insn_beq $end
$var wire 1 : w_insn_addi $end
$var wire 32 ; w_imm32 [31:0] $end
$var wire 16 < w_imm [15:0] $end
$var wire 6 = w_funct [5:0] $end
$var reg 1 > r_insn_lw $end
$var reg 1 ? r_insn_sw $end
$var reg 32 @ r_led [31:0] $end
$var reg 32 A r_pc [31:0] $end
$var reg 32 B r_pc4 [31:0] $end
$var reg 32 C r_rrs [31:0] $end
$var reg 32 D r_rrt [31:0] $end
$var reg 32 E r_rrt2 [31:0] $end
$var reg 32 F r_rslt [31:0] $end
$var reg 1 G r_state $end
$var reg 1 H r_taken $end
$var reg 32 I r_tpc [31:0] $end
$var reg 1 J r_we $end
$scope module m_dmem $end
$var wire 11 K w_addr [10:0] $end
$var wire 1 " w_clk $end
$var wire 32 L w_din [31:0] $end
$var wire 32 M w_dout [31:0] $end
$var wire 1 ? w_we $end
$upscope $end
$scope module m_imem $end
$var wire 11 N w_addr [10:0] $end
$var wire 1 " w_clk $end
$var wire 32 O w_din [31:0] $end
$var wire 32 P w_dout [31:0] $end
$var wire 1 Q w_we $end
$upscope $end
$scope module m_regs $end
$var wire 1 " w_clk $end
$var wire 5 R w_rr1 [4:0] $end
$var wire 5 S w_rr2 [4:0] $end
$var wire 32 T w_wdata [31:0] $end
$var wire 1 J w_we $end
$var wire 5 U w_wr [4:0] $end
$var wire 32 V w_rdata2 [31:0] $end
$var wire 32 W w_rdata1 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx W
bx V
bx U
b0 T
bx S
bx R
0Q
bx P
b0 O
b0 N
bx M
b0 L
b0 K
0J
b0 I
0H
0G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
0?
0>
bx =
bx <
bx ;
x:
x9
x8
x7
x6
bx 5
bx 4
bx 3
b100 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
b0 *
bx )
bx (
x'
x&
x%
x$
x#
0"
b0 !
$end
#200
1'
b1011100 (
b10110 -
0&
b10000 0
b10000 U
b0 /
b0 W
0#
0$
0%
b10110 =
b10110 ;
b10110 <
b0 1
b10000 )
b10000 S
b0 ,
b0 R
1:
07
06
09
08
b1000 3
b100000000100000000000000010110 4
b100000000100000000000000010110 M
b100000000100000000000000010110 5
b100000000100000000000000010110 P
#300
b10110 +
#500
1G
b100 B
1"
#1000
0"
#1500
b10110 E
bx D
bx L
b1011100 I
0G
1"
#2000
0"
#2500
1G
1"
#3000
0"
#3500
0G
1"
#4000
0"
#4500
1G
1"
#5000
0"
#5500
0G
1"
#6000
0"
#6500
1G
1"
#7000
0"
#7500
0G
1"
#8000
0"
#8500
1G
1"
#9000
0"
#9500
0G
1"
#10000
0"
#10500
1G
1"
#11000
0"
#11500
0G
1"
#12000
0"
#12500
1G
1"
#13000
0"
#13500
0G
1"
#14000
0"
#14500
1G
1"
#15000
0"
#15500
0G
1"
#16000
0"
#16500
1G
1"
#17000
0"
#17500
0G
1"
#18000
0"
#18500
1G
1"
#19000
0"
#19500
0G
1"
#20000
0"
